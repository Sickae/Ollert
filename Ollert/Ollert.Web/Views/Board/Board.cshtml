@model BoardViewModel

@section Scripts {
    <script type="text/javascript">

        // Event listener-ek regisztrálása

        // Új lista hozzáadásnál Enter és Esc gombok működése
        $(document).on('keyup', '.cardlist-new-input', function (event) {
            if (event.keyCode === 13) { // Enter
                addNewCardList();
            } else if (event.keyCode === 27) { // Escape
                toggleNewCardListWindow();
            }
        });

        // Új kártya hozzáadásnál meggátolja az új sort Enter leütésénél Shift nélkül
        $(document).on('keydown', '.empty-card-input .cardlist-card-name-input', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) {
                event.preventDefault();
            }
            resizeTextArea(this);
        });

        // Új kártya hozzáadásnál Enter és Esc gombok működése
        $(document).on('keyup', '.empty-card-input .cardlist-card-name-input', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) {
                addNewCard(this);
            } else if (event.keyCode === 27) {
                toggleNewCardWindow(this);
            } else {
                resizeTextArea(this);
            }
        });

        // Kártya szerkesztésnél meggátolja az új sort Enter leütésénél Shift nélkül
        $(document).on('keydown', '.edit-card-input .cardlist-card-name-input', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) {
                event.preventDefault();
            }
            resizeTextArea(this);
        });

        // Kártya szerkesztésnél Enter és Esc gombok működése
        $(document).on('keyup', '.edit-card-input .cardlist-card-name-input', function (event) {
            if (event.keyCode === 13 && !event.shiftKey) {
                renameCard(this);
            } else if (event.keyCode === 27) {
                toggleEditCardWindow(this);
            } else {
                resizeTextArea(this);
            }
        });

        // Kártya törlése
        $(document).on('click', '.cardlist-icon-delete', function () {
            deleteCard($(this));
        });

        // Lista címére kattintva szerkeszthetővé teszi
        $(document).on('focus', '.cardlist-title', function () {
            $(this).addClass('edit');
        });

        // Lista cím input kikattintásánál elmenti a módosításokat
        $(document).on('blur', '.cardlist-title', function () {
            if ($(this).val().length > 0) {
                renameCardList(this);
            } else {
                $(this).val($(this).data('title'));
            }
            $(this).removeClass('edit');
            $(this).caretToStart();
        });

        // Lista cím szerkesztésénél Enter és Esc gombok működése
        $(document).on('keyup', '.cardlist-title', function (event) {
            if (event.keyCode === 13) {
                $(this).blur();
            } else if (event.keyCode === 27) {

                $(this).val('');
                $(this).blur();
            }
        });

        // Helper functions

        // Textarea (pl. új kártya input mező) automatikus átméretezése
        function resizeTextArea(textarea) {
            $(textarea).css('height', 'auto');
            $(textarea).css('height', textarea.scrollHeight + 'px');
        }

        // CardList functions

        // Új lista hozzáadása ablak ki/be kapcsolása
        function toggleNewCardListWindow() {
            $('input.cardlist-new-input').val('');
            $('.cardlist-new').toggle();
            var inputContainer = $('.cardlist-new-input-container').slideToggle('fast');

            if (inputContainer.css('display') === 'block') {
                $('.cardlist-new-input').focus();
            }
        }

        // Új lista hozzáadása
        function addNewCardList() {
            var emptyList = $('.helper-divs > .empty-cardlist > .cardlist-container').clone();
            var inputContainer = $('.cardlist-new-input-container').closest('.cardlist-container');
            var title = inputContainer.find('input.cardlist-new-input').val();

            emptyList.find('.cardlist-title').val(title);
            inputContainer.find('.cardlist-new').show();
            inputContainer.find('.cardlist-new-input-container').hide();
            $('.cardlist-list').append(emptyList).append(inputContainer);

            $.post('@Url.Action(nameof(BoardController.AddNewCardList), "Board")', {
                boardId: @Model.Id,
                cardListName: title
            }).done(function (data) {
                if (data.success) {
                    var id = data.id;
                    emptyList.attr('data-id', id);
                    emptyList.find('.cardlist-title').attr('data-title', data.name);
                }
            });
        }

        // Lista átnevezése
        function renameCardList(caller) {
            var listContainer = $(caller).closest('.cardlist-container');
            $.post('@Url.Action(nameof(CardListController.Rename), "CardList")', {
                id: listContainer.data('id'),
                cardListName: $(caller).val()
            }).done(function (data) {
                if (data.success) {
                    $(caller).attr('data-title', data.name);
                } else {
                    $(caller).val($(caller).data('title'));
                }
            });
        }

        // Card functions

        // Új kártya hozzáadása ablak ki/be kapcsolása
        function toggleNewCardWindow(caller) {
            var activeWindow = $('.cardlist-list').find('.empty-card-input');

            if (activeWindow.length > 0) {
                activeWindow.closest('.cardlist-container').find('.cardlist-card-new').show();
                activeWindow.remove();
            } else {
                var container = $(caller).closest('.cardlist-container');
                var inputWindow = $('.helper-divs > .empty-card-input').clone();
                container.find('.cardlist-card-new').hide();
                container.find('.cardlist-content').append(inputWindow);
                inputWindow.find('.cardlist-card-name-input').focus();
            }
        }

        // Kártya szerkesztés ablak ki/be kapcsolása
        function toggleEditCardWindow(caller) {
            var activeWindow = $(caller).closest('.edit-card-input');

            if (activeWindow.length > 0) {
                var card = activeWindow.closest('.cardlist-card');
                activeWindow.remove();

                card.removeClass('edit');
                card.children('div').show();
            } else {
                var card = $(caller).closest('.cardlist-card');
                var cardId = card.data('id');
                var cardName = card.find('.cardlist-card-name').text();
                var cardInput = $('.helper-divs > .edit-card-input').clone();

                card.addClass('edit');
                card.children('div').hide();
                card.append(cardInput);
                cardInput.find('.cardlist-card').attr('data-id', cardId);
                cardInput.find('.cardlist-card-name-input').val(cardName).focus();
            }
        }

        // Új kártya hozzáadása
        function addNewCard(caller) {
            var emptyCard = $('.helper-divs > .empty-card > .cardlist-card').clone();
            var listContainer = $(caller).closest('.cardlist-container');
            var cardName = $(caller).closest('.empty-card-input').find('.cardlist-card-name-input').val();

            $.post('@Url.Action(nameof(CardListController.AddNewCard), "CardList")', {
                cardListId: listContainer.data('id'),
                cardName: cardName
            }).done(function (data) {
                if (data.success) {
                    emptyCard.attr('data-id', data.id);
                    emptyCard.find('.cardlist-card-name').text(cardName);
                    listContainer.find('.cardlist-content').append(emptyCard);
                    toggleNewCardWindow();
                    emptyCard.show();
                }
            });
        }         

        // Kártya átnevezése
        function renameCard(caller) {
            var cardName = $(caller).closest('.cardlist-card').find('.cardlist-card-name-input').val();
            var editInput = $(caller).closest('.edit-card-input');
            var card = editInput.closest('.cardlist-card');

            $.post('@Url.Action(nameof(CardController.Rename), "Card")', {
                id: card.data('id'),
                cardName
            }).done(function (data) {
                if (data.success) {
                    editInput.remove();
                    card.find('.cardlist-card-name').text(cardName);
                    card.children('div').show();
                }
            })
        }

        // Kártya törlése
        function deleteCard(caller) {
            var cardListId = $(caller).closest('.cardlist-container').data('id');
            var cardId = $(caller).closest('.cardlist-card').data('id');

            $.post('@Url.Action(nameof(CardListController.RemoveCard), "CardList")', {
                cardListId,
                cardId
            }).done(function (data) {
                if (data.success) {
                    $('.cardlist-card[data-id=' + cardId + ']').remove();
                }
            })
        }

    </script>
}

<div class="row cardlist-list">
    @foreach (var cardList in Model.CardLists)
    {
        <div class="cardlist-container" data-id="@cardList.Id">
            <div class="cardlist-header">
                <input class="cardlist-title" value="@cardList.Name" data-title="@cardList.Name" />
                <div class="cardlist-header-menu">
                    <a class="cardlist-header-menu-link">
                        <span class="fas fa-ellipsis-h"></span>
                    </a>
                </div>
            </div>
            <div class="cardlist-content">
                @foreach (var card in cardList.Cards)
                {
                    <div class="cardlist-card" data-id="@card.Id">
                        <div class="cardlist-card-icon cardlist-card-icon-edit">
                            <a onclick="toggleEditCardWindow(this)">
                                <span class="fas fa-pencil-alt"></span>
                            </a>
                        </div>
                        @foreach (var label in card.Labels)
                        {
                            <div class="cardlist-card-label-container">
                                <div class="cardlist-card-label" style="background-color: @label.Color"></div>
                            </div>
                        }
                        <div class="cardlist-card-name">@card.Name</div>
                        @if (card.Comments.Any())
                        {
                            <div class="cardlist-card-icon cardlist-card-icon-comment">
                                <span class="fas fa-comment"></span>
                                @card.Comments.Count
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="cardlist-card-new" onclick="toggleNewCardWindow(this)">
                <span class="fas fa-plus"></span>
                Új kártya hozzáadása
            </div>
        </div>
    }

    <div class="cardlist-container">
        <div class="cardlist-content cardlist-new-input-container">
            <input class="cardlist-new-input" placeholder="Cím..."/>
            <div class="cardlist-new-control">
                <a class="btn btn-save" onclick="addNewCardList()">Mentés</a>
                <div class="cardlist-icon-cancel" onclick="toggleNewCardListWindow()">
                    <span class="fas fa-times"></span>
                </div>
            </div>
        </div>
        <div class="cardlist-content cardlist-new" onclick="toggleNewCardListWindow()">
            <span class="fas fa-plus"></span>
            Új lista hozzáadása
        </div>
    </div>
</div>

<div class="helper-divs">
    @* Kártya létrehozás *@
    <div class="empty-card-input">
        <div class="cardlist-card">
            <textarea class="cardlist-card-name-input" placeholder="Kártya neve..." spellcheck="false"></textarea>
        </div>
        <div class="empty-card-input-control">
            <a class="btn btn-save" onclick="addNewCard(this)">Mentés</a>
            <div class="cardlist-icon-cancel" onclick="toggleNewCardWindow()">
                <span class="fas fa-times"></span>
            </div>
        </div>
    </div>

    @* Kártya szerkesztés *@
    <div class="edit-card-input">
        <div class="cardlist-card">
            <textarea class="cardlist-card-name-input" placeholder="Kártya neve..." spellcheck="false"></textarea>
        </div>
        <div class="edit-card-input-control">
            <a class="btn btn-save" onclick="renameCard(this)">Mentés</a>
            <div class="cardlist-icon-cancel" onclick="toggleEditCardWindow(this)">
                <span class="fas fa-times"></span>
            </div>
            <div class="cardlist-icon-delete">
                <span class="fas fa-trash"></span>
            </div>
        </div>
    </div>

    @* Kártya mock *@
    <div class="empty-card">
        <div class="cardlist-card">
            <div class="cardlist-card-icon cardlist-card-icon-edit">
                <a onclick="toggleEditCardWindow(this)">
                    <span class="fas fa-pencil-alt"></span>
                </a>
            </div>
            <div class="cardlist-card-name"></div>
        </div>
    </div>

    @* Lista mock *@
    <div class="empty-cardlist">
        <div class="cardlist-container">
            <div class="cardlist-header">
                <input class="cardlist-title" />
                <div class="cardlist-header-menu">
                    <a href="#">
                        <span class="fas fa-ellipsis-h"></span>
                    </a>
                </div>
            </div>
            <div class="cardlist-content"></div>
            <div class="cardlist-card-new" onclick="toggleNewCardWindow(this)">
                <span class="fas fa-plus"></span>
                Új kártya hozzáadása
            </div>
        </div>
    </div>
</div>
