@model BoardViewModel

@section Scripts {
    <script type="text/javascript">

        function toggleNewCardListWindow() {
            $('input.cardlist-new-input').val('');
            $('.cardlist-new').toggle();
            var inputContainer = $('.cardlist-new-input-container').slideToggle('fast');

            if (inputContainer.css('display') === 'block') {
                $('.cardlist-new-input').focus();
            }
        }

        function toggleNewCardWindow(caller) {
            var activeWindow = $('.cardlist-list').find('.empty-card-input');

            if (activeWindow.length > 0) {
                activeWindow.closest('.cardlist-container').find('.cardlist-card-new').show();
                activeWindow.remove();
            } else {
                var container = $(caller).closest('.cardlist-container');
                var inputWindow = $('.empty-card-input').clone();
                container.find('.cardlist-card-new').hide();
                container.find('.cardlist-content').append(inputWindow);
                inputWindow.find('.cardlist-card-name-input').focus();
            }
        }

        function addNewCard(caller) {
            var emptyCard = $('.helper-divs > .empty-card > .cardlist-card').clone();
            var list = $(caller).closest('.cardlist-container').find('.cardlist-content');
            var cardName = $(caller).closest('.empty-card-input').find('.cardlist-card-name-input').val();

            $.post('@Url.Action(nameof(CardListController.AddNewCard), "CardList")', {
                cardListId: list.data('id'),
                cardName: cardName
            }).done(function (data) {
                if (data.success) {
                    emptyCard.attr('data-id', data.id);
                    emptyCard.find('.cardlist-card-name').text(cardName);
                    list.append(emptyCard);
                    toggleNewCardWindow();
                    emptyCard.show();
                }
            });
        }

        function addNewCardList() {
            var emptyList = $('.helper-divs > .empty-cardlist > .cardlist-container').clone();
            var inputContainer = $('.cardlist-new-input-container').closest('.cardlist-container');
            var title = inputContainer.find('input.cardlist-new-input').val();

            emptyList.find('.cardlist-title').text(title);
            inputContainer.find('.cardlist-new').show();
            inputContainer.find('.cardlist-new-input-container').hide();
            $('.cardlist-list').append(emptyList).append(inputContainer);

            $.post('@Url.Action(nameof(BoardController.AddNewCardList), "Board")', {
                boardId: @Model.Id,
                cardListName: title
            }).done(function (data) {
                if (data.success) {
                    var id = data.id;
                    emptyList.find('.cardlist-content').attr('data-id', id);
                }
            });
        }

        function resizeTextArea(textarea) {
            $(textarea).css('height', 'auto');
            $(textarea).css('height', textarea.scrollHeight + 'px');
        }

        function toggleEditCardWindow(caller) {
            var card = $(caller).closest('.cardlist-card');
            var activeWindow = card.find('.edit-card-input');

            if (activeWindow.length > 0) {
                activeWindow.remove();

                card.removeClass('edit');
                card.children('div').show();
            } else {
                var cardName = card.find('.cardlist-card-name').text();
                var cardInput = $('.helper-divs > .edit-card-input').clone();

                card.addClass('edit');
                card.children('div').hide();
                card.append(cardInput);
                cardInput.find('.cardlist-card-name-input').val(cardName).focus();
            }
        }

        function editCard(caller) {
            var cardName = $(caller).closest('.cardlist-card').find('.cardlist-card-name-input').val();
            var editInput = $(caller).closest('.edit-card-input');
            var card = editInput.closest('.cardlist-card');

            $.post('@Url.Action(nameof(CardController.EditCardName), "Card")', {
                id: card.data('id'),
                cardName
            }).done(function (data) {
                if (data.success) {
                    editInput.remove();
                    card.find('.cardlist-card-name').text(cardName);
                    card.children('div').show();
                }
            })
        }

    </script>
}

<div class="row cardlist-list">
    @foreach (var cardList in Model.CardLists)
    {
        <div class="cardlist-container">
            <div class="cardlist-header">
                <input class="cardlist-title" readonly disabled value="@cardList.Name" />
                <div class="cardlist-header-menu">
                    <a href="#">
                        <span class="fas fa-ellipsis-h"></span>
                    </a>
                </div>
            </div>
            <div class="cardlist-content" data-id="@cardList.Id">
                @foreach (var card in cardList.Cards)
                {
                    <div class="cardlist-card" data-id="@card.Id">
                        <div class="cardlist-card-icon cardlist-card-icon-edit">
                            <a onclick="toggleEditCardWindow(this)">
                                <span class="fas fa-pencil-alt"></span>
                            </a>
                        </div>
                        @foreach (var label in card.Labels)
                        {
                            <div class="cardlist-card-label-container">
                                <div class="cardlist-card-label" style="background-color: @label.Color"></div>
                            </div>
                        }
                        <div class="cardlist-card-name">@card.Name</div>
                        @if (card.Comments.Any())
                        {
                            <div class="cardlist-card-icon cardlist-card-icon-comment">
                                <span class="fas fa-comment"></span>
                                @card.Comments.Count
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="cardlist-card-new" onclick="toggleNewCardWindow(this)">
                <span class="fas fa-plus"></span>
                Új kártya hozzáadása
            </div>
        </div>
    }

    <div class="cardlist-container">
        <div class="cardlist-content cardlist-new-input-container">
            <input class="cardlist-new-input" placeholder="Cím..."/>
            <div class="cardlist-new-control">
                <a class="btn btn-save" onclick="addNewCardList()">Mentés</a>
                <div class="cardlist-icon-cancel" onclick="toggleNewCardListWindow()">
                    <span class="fas fa-times"></span>
                </div>
            </div>
        </div>
        <div class="cardlist-content cardlist-new" onclick="toggleNewCardListWindow()">
            <span class="fas fa-plus"></span>
            Új lista hozzáadása
        </div>
    </div>
</div>

<div class="helper-divs">
    <div class="empty-card-input">
        <div class="cardlist-card">
            <textarea class="cardlist-card-name-input" placeholder="Kártya neve..." spellcheck="false" onkeydown="resizeTextArea(this)" onkeyup="resizeTextArea(this)"></textarea>
        </div>
        <div class="empty-card-input-control">
            <a class="btn btn-save" onclick="addNewCard(this)">Mentés</a>
            <div class="cardlist-icon-cancel" onclick="toggleNewCardWindow()">
                <span class="fas fa-times"></span>
            </div>
        </div>
    </div>

    <div class="edit-card-input">
        <div class="cardlist-card">
            <textarea class="cardlist-card-name-input" placeholder="Kártya neve..." spellcheck="false" onkeydown="resizeTextArea(this)" onkeyup="resizeTextArea(this)"></textarea>
        </div>
        <div class="edit-card-input-control">
            <a class="btn btn-save" onclick="editCard(this)">Mentés</a>
            <div class="cardlist-icon-cancel" onclick="toggleEditCardWindow(this)">
                <span class="fas fa-times"></span>
            </div>
        </div>
    </div>

    <div class="empty-card">
        <div class="cardlist-card">
            <div class="cardlist-card-icon cardlist-card-icon-edit">
                <a onclick="toggleEditCardWindow(this)">
                    <span class="fas fa-pencil-alt"></span>
                </a>
            </div>
            <div class="cardlist-card-name"></div>
        </div>
    </div>

    <div class="empty-cardlist">
        <div class="cardlist-container">
            <div class="cardlist-header">
                <div class="cardlist-title"></div>
                <div class="cardlist-header-menu">
                    <a href="#">
                        <span class="fas fa-ellipsis-h"></span>
                    </a>
                </div>
            </div>
            <div class="cardlist-content"></div>
            <div class="cardlist-card-new" onclick="toggleNewCardWindow(this)">
                <span class="fas fa-plus"></span>
                Új kártya hozzáadása
            </div>
        </div>
    </div>
</div>
